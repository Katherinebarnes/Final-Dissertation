from heartbeat import *
from onewire_temp import *
import RPi.GPIO as GPIO
import time
import urllib.request
import serial

# Setup GPIO
GPIO.setwarnings(False)
GPIO.setmode(GPIO.BCM)

switch = 26
buzzer = 21
GPIO.setup(switch, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(buzzer, GPIO.OUT)
GPIO.output(buzzer, False)

# ThingSpeak API
API_KEY = 'SKSUJ7JRQPTDBUUP'
BASE_URL = 'https://api.thingspeak.com/update?api_key=' + API_KEY

# Function to post to ThingSpeak
def thingspeak_post(heartbeat, temperature_c, latitude, longitude):
    try:
        final_url = f"{BASE_URL}&field1={heartbeat}&field2={temperature_c}&field3={latitude}&field4={longitude}"
        response = urllib.request.urlopen(final_url)
        print("Data uploaded to ThingSpeak.")
    except Exception as e:
        print("Error uploading data:", e)

# Function to read GPS coordinates
def get_gps_coordinates():
    try:
        gps = serial.Serial("/dev/ttyAMA0", baudrate=9600, timeout=1)
        while True:
            line = gps.readline().decode('ascii', errors='replace')
            if line.startswith('$GPGGA'):
                parts = line.split(',')
                if parts[2] and parts[4]:
                    lat = float(parts[2])
                    lon = float(parts[4])
                    lat_dir = parts[3]
                    lon_dir = parts[5]

                    # Convert to decimal degrees
                    lat = (int(lat / 100) + (lat % 100) / 60.0)
                    lon = (int(lon / 100) + (lon % 100) / 60.0)
                    if lat_dir == 'S': lat = -lat
                    if lon_dir == 'W': lon = -lon

                    return round(lat, 6), round(lon, 6)
    except Exception as e:
        print("GPS error:", e)
        return None, None

# Main loop
if __name__ == '__main__':
    while True:
        setHeartRate()
        heartbeat_val = HEART_BEAT()
        print("Heartbeat:", heartbeat_val)

        if GPIO.input(switch) == False:
            print("Emergency....")
            GPIO.output(buzzer, True)
            time.sleep(1)
            GPIO.output(buzzer, False)

        temp_c, temp_f = read_temp()
        print('Temperature:', temp_c, 'C')

        latitude, longitude = get_gps_coordinates()
        if latitude is None or longitude is None:
            latitude = 0.0
            longitude = 0.0
            print("GPS not available")

        thingspeak_post(heartbeat_val, temp_c, latitude, longitude)
        time.sleep(20)  # ThingSpeak allows 15s minimum for free plans
